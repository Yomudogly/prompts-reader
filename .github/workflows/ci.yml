name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  test:
    name: Run Tests and Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript type checking
      run: npx tsc --noEmit
      
    - name: Run linting
      run: npm run lint
      continue-on-error: true
      
    - name: Run tests (if test script exists)
      run: |
        if npm run test --dry-run 2>/dev/null; then
          npm run test
        else
          echo "No test script found, skipping tests"
        fi
      continue-on-error: true

  build:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: extension-build-${{ github.sha }}
        path: build/
        retention-days: 30

  package:
    name: Package Extension
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build
      
    - name: Package extension
      run: |
        cd build/chrome-mv3-prod
        zip -r ../../prompts-reader-${{ github.event.release.tag_name }}.zip .
        
    - name: Upload package to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./prompts-reader-${{ github.event.release.tag_name }}.zip
        asset_name: prompts-reader-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Check for known vulnerabilities
      run: |
        npx better-npm-audit audit --level moderate
      continue-on-error: true

  quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check package.json for required fields
      run: |
        node -e "
          const pkg = require('./package.json');
          const required = ['name', 'version', 'description', 'author'];
          const missing = required.filter(field => !pkg[field]);
          if (missing.length) {
            console.error('Missing required package.json fields:', missing);
            process.exit(1);
          }
          console.log('Package.json validation passed');
        "
        
    - name: Validate manifest.json
      run: |
        if [ -f "manifest.json" ]; then
          node -e "
            const manifest = require('./manifest.json');
            if (!manifest.name || !manifest.version || !manifest.description) {
              console.error('Invalid manifest.json: missing required fields');
              process.exit(1);
            }
            console.log('Manifest validation passed');
          "
        else
          echo "No manifest.json found in root, checking build directory after build"
        fi
        
    - name: Build for validation
      run: npm run build
      
    - name: Validate built manifest
      run: |
        if [ -f "build/chrome-mv3-prod/manifest.json" ]; then
          node -e "
            const manifest = require('./build/chrome-mv3-prod/manifest.json');
            if (!manifest.name || !manifest.version || !manifest.description) {
              console.error('Invalid built manifest.json: missing required fields');
              process.exit(1);
            }
            console.log('Built manifest validation passed');
          "
        else
          echo "No built manifest found, build may have failed"
          exit 1
        fi
